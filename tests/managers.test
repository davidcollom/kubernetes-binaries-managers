#!/usr/bin/env bash

load "lib/create-kind-cluster/load"

load "lib/bats-support/load"
load "lib/bats-assert/load"

function setup() {
  if [[ ! -e ./bin/kbenv  ]]
  then
    make build
  elif [[ ! -e ./bin/kubectl-wrapper ]]
  then
    make build
  elif [[ ! -e ./bin/helmenv ]]
  then
    make build
  elif [[ ! -e ./bin/helm-wrapper ]]
  then
    make build
  elif [[ ! -e ./bin/ocenv ]]
  then
    make build
  elif [[ ! -e ./bin/oc-wrapper ]]
  then
    make build
  fi
  user_bin_path="/home/$(whoami)/.bin/"
  export PATH="$PATH:$user_bin_path"
  PATH="$PATH:$(pwd)/bin/"
  export PATH
}

@test "install" {
  run ./bin/kbenv uninstall 1.31.0
  assert_success
  run ./bin/helmenv uninstall 3.19.0
  assert_success
  run ./bin/ocenv uninstall 4.15.0-0.okd-2024-03-10-010116
  assert_success

  run ./bin/kbenv install 1.31.0
  assert_output --partial "Done! Saving it at"
  run ./bin/helmenv install 3.19.0
  assert_output --partial "Done! Saving it at"
  run ./bin/ocenv install 4.15.0-0.okd-2024-03-10-010116
  assert_output --partial "Done! Saving it at"

  run ./bin/kbenv uninstall 1.31.0
  assert_success
  run ./bin/helmenv uninstall 3.19.0
  assert_success
  run ./bin/ocenv uninstall 4.15.0-0.okd-2024-03-10-010116
  assert_success
}

@test "uninstall" {
  run ./bin/kbenv install 1.31.0
  assert_success
  run ./bin/helmenv install 3.19.0
  assert_success
  run ./bin/ocenv install 4.15.0-0.okd-2024-03-10-010116
  assert_success

  run ./bin/kbenv uninstall 1.31.0
  assert_output --partial "Done! 1.31.0 version uninstalled from"
  run ./bin/helmenv uninstall 3.19.0
  assert_output --partial "Done! 3.19.0 version uninstalled from"
  run ./bin/ocenv uninstall 4.15.0-0.okd-2024-03-10-010116
  assert_output --partial "Done! 4.15.0-0.okd-2024-03-10-010116 version uninstalled from"
}

@test "use" {
  run ./bin/kbenv install 1.31.0
  assert_success
  run ./bin/helmenv install 3.19.0
  assert_success
  run ./bin/ocenv install 4.15.0-0.okd-2024-03-10-010116
  assert_success

  run ./bin/kbenv use 1.31.0
  assert_output --partial "Done! Using 1.31.0 version."
  run ./bin/helmenv use 3.19.0
  assert_output --partial "Done! Using 3.19.0 version."
  run ./bin/ocenv use 4.15.0-0.okd-2024-03-10-010116
  assert_output --partial "Done! Using 4.15.0-0.okd-2024-03-10-010116 version."

  run ./bin/kubectl-wrapper version --client
  assert_output --partial 'GitVersion:"v1.31.0"'
  run ./bin/helm-wrapper version --client
  assert_output --partial 'Version:"v3.19.0"'
  run ./bin/oc-wrapper version --client
  assert_output --partial 'Version: 4.15.0-0.okd-2024-03-10-010116'
  run ./bin/kbenv uninstall 1.31.0
  assert_success
  run ./bin/helmenv uninstall 3.19.0
  assert_success
  run ./bin/ocenv uninstall 4.15.0-0.okd-2024-03-10-010116
  assert_success
}

@test "list local versions" {
  run ./bin/kbenv install 1.31.0
  assert_success
  run ./bin/helmenv install 3.19.0
  assert_success
  run ./bin/ocenv install 4.15.0-0.okd-2024-03-10-010116
  assert_success

  run ./bin/kbenv list local
  assert_output --partial "1.31.0"
  run ./bin/helmenv list local
  assert_output --partial "3.19.0"
  run ./bin/ocenv list local
  assert_output --partial "4.15.0-0.okd-2024-03-10-010116"
}

@test "list remote versions" {
  run ./bin/kbenv list remote --all-versions
  if [ "$status" -eq 1 ]
  then
    skip "Attacking Github's API failed, probably because of it's rating. Skipping the test."
  fi
  assert_output --partial "1.31.0"

  run ./bin/helmenv list remote --all-versions
  if [ "$status" -eq 1 ]
  then
    skip "Attacking Github's API failed, probably because of it's rating. Skipping the test."
  fi
  assert_output --partial "3.19.0"

  run ./bin/ocenv list remote --all-versions
  if [ "$status" -eq 1 ]
  then
    skip "Attacking Github's API failed, probably because of it's rating. Skipping the test."
  fi
  assert_output --partial "4.15.0-0.okd-2024-03-10-010116"
}
